## 函数式编程（FunctionalProgramming）
- 基于lambda演算的一种编程方式
    - 程序中只有函数
    - 函数可以作为参数，同样可以作为返回值
    - 纯函数式编程语言：LISP,Haskell
- Python函数式编程只是借鉴函数式编程的一些特点，可以理解成一半函数式一半Python
- 需要讲述：
    - 高阶函数
    - 返回函数
    - 匿名函数（lambda）
    - 函数装饰器
    - 偏函数


### lambda表达式（Python的匿名函数）
- 函数：最大程度复用代码
    - 存在问题：如果函数很小，很短，则会造成啰嗦
    - 如果函数被调用次数少，则会造成浪费
    - 对于阅读者来说，造成阅读流程给的被迫中断
- lambda表达式(匿名函数)：
     - 一个表达式，函数体相对简单
     - 不是一个代码块，仅仅是一个表达式，
     - 可以有参数，有多个参数也可以，用逗号隔开


### 高阶函数
- 把函数作为参数使用的函数，叫高阶函数
- 根据高阶函数1.py可以得出结论：
    - 函数名称是变量
    - funB和funA只是名称不一样而已
    - 既然函数名称是变量，则应该可以被当做参数传入另一个函数

### 系统高阶函数-map
- 原意就是映射，即把集合或者列表的元素，每一个元素都按照一定规则进行操作
   生成一个新的列表或者集合
- map函数是系统提供的具有映射功能的函数，返回值是一个迭代对象

### reduce
- 原意就是归并，缩减
- 把一个可迭代对象最后归并成一个结果
- 对于作为参数的函数要求：必须有两个参数，必须有返回结果
- reduce（[1,2,3,4,5]）==f(f(f( f(1,2),3),4),5)
- reduce 需要导入functools包